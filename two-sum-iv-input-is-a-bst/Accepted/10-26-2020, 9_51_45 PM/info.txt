{"id":413367130,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1603720305,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/413367130/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"37.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   vector<int> v;\n    \n    void buildvector(TreeNode* root){\n        if(root==NULL){\n            return;\n        }\n        buildvector(root->left);\n        v.push_back(root->val);\n        buildvector(root->right);\n    }\n    \n    \n    \n    bool findTarget(TreeNode* root, int k) {\n        buildvector(root);\n        int left=0,right=v.size()-1;\n        while(left!=right){\n            int t = v[left]+v[right];\n            if(t==k){\n                return true;\n                break;\n            }\n            else if(t>k){\n                right--;\n            }\n            else if(t<k){\n                left++;\n            }\n        }\n        return false;\n        \n        \n        \n        return true;\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum-iv-input-is-a-bst","has_notes":false,"flag_type":1}