{"id":617684559,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1641913825,"status":10,"status_display":"Accepted","runtime":"87 ms","url":"/submissions/detail/617684559/","is_pending":"Not Pending","title":"Reorder List","memory":"19.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void reorderList(ListNode* head) {\n        ListNode *itr = head;\n        vector<ListNode*> tmpList;\n        \n        while (itr != NULL)\n        {\n            tmpList.push_back(itr);\n            itr = itr->next;\n        }\n        \n        if (tmpList.size() <= 2)\n            return;\n        \n        for (int i = 0; i < tmpList.size() / 2; i++)\n        {\n            tmpList.at(i)->next = tmpList.at(tmpList.size() - 1 - i);\n            if (i < tmpList.size() / 2 - 1)\n                tmpList.at(tmpList.size() - 1 - i)->next = tmpList.at(i + 1);\n        }\n        if (tmpList.size() % 2 == 0)\n            tmpList.at(tmpList.size() / 2)->next = NULL;\n        else\n        {\n            tmpList.at(tmpList.size() / 2 + 1)->next =  tmpList.at(tmpList.size() / 2);\n            tmpList.at(tmpList.size() / 2)->next = NULL;\n        }        \n    }\n};","compare_result":"111111111111","title_slug":"reorder-list","has_notes":false,"flag_type":1}