{"id":1024650687,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1692343725,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1024650687/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"23.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<double> averageOfLevels(TreeNode* root) {\n        vector<vector<int>> t;\n        helper(root, t, 0);\n        vector<double> res;\n        for (auto i = 0; i < t.size(); i++) {\n            double te = 0.0;\n            for (auto j : t[i]) {\n                te += (double) j;\n            }\n            res.push_back(te / t[i].size());\n        }\n\n        return res;\n    }\n\n    void helper(TreeNode* root, vector<vector<int>> &t, int level) {\n        if (!root)\n            return;\n        if (t.size() <= level) {\n            vector<int> tmp = { root->val };\n            t.push_back(tmp);\n        } else {\n            t[level].push_back(root->val);\n        }\n        if (root->left)\n            helper(root->left, t, level + 1);\n        if (root->right)\n            helper(root->right, t, level + 1);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"average-of-levels-in-binary-tree","has_notes":false,"flag_type":1}