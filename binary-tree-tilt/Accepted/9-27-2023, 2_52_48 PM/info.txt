{"id":1060316165,"lang":"cpp","lang_name":"C++","time":"1 day, 5 hours","timestamp":1695797568,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1060316165/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"24 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int getSum(TreeNode* root) {\n        if (!root)\n            return 0;\n        return root->val + getSum(root->left) + getSum(root->right);\n    }\n\n    int findTilt(TreeNode* root) {\n        if (!root)\n            return 0;\n        int left_s = getSum(root->left);\n        int right_s = getSum(root->right);\n\n        return abs(right_s - left_s) + findTilt(root->left) + findTilt(root->right);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt","has_notes":false,"flag_type":1}