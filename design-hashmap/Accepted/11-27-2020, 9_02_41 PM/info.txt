{"id":424634307,"lang":"cpp","lang_name":"C++","time":"2 years, 10 months","timestamp":1606482161,"status":10,"status_display":"Accepted","runtime":"1048 ms","url":"/submissions/detail/424634307/","is_pending":"Not Pending","title":"Design HashMap","memory":"44.5 MB","code":"class MyHashMap {\n    \n    \npublic:\n    vector<pair<int, int>> hash_map;\n\n    /** Initialize your data structure here. */\n    MyHashMap() {\n       // hash_map = new vector<pair<int, int>>();\n    }\n    \n    /** value will always be non-negative. */\n    void put(int key, int value) {\n        vector<pair<int, int>>::iterator it;\n        for (it = hash_map.begin(); it < hash_map.end(); ++it) {\n            if (it->first == key) {\n                it->second = value;\n                return;\n            }\n        }\n        hash_map.push_back(make_pair(key, value));\n    }\n    \n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\n    int get(int key) {\n        vector<pair<int, int>>::iterator it;\n         for (it = hash_map.begin(); it < hash_map.end(); ++it) {\n            if (it->first == key) {                \n                return it->second;\n            }\n        }\n\n        return -1;\n    }\n    \n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\n    void remove(int key) {\n        vector<pair<int, int>>::iterator it;\n         for (it = hash_map.begin(); it < hash_map.end(); ++it) {\n            if (it->first == key) {                \n                hash_map.erase(it);\n                return;\n            }\n        }       \n    }\n};\n\n/**\n * Your MyHashMap object will be instantiated and called as such:\n * MyHashMap* obj = new MyHashMap();\n * obj->put(key,value);\n * int param_2 = obj->get(key);\n * obj->remove(key);\n */","compare_result":"111111111111111111111111111111111","title_slug":"design-hashmap","has_notes":false,"flag_type":1}