{"id":413370376,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1603721042,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/413370376/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> res;\n        helper(root, res);\n        \n        \n        return res;\n    }\n    \n    void helper(TreeNode* root, vector<int>& tree) { \n        if (root == NULL)\n            return;\n        \n        helper(root->left, tree);\n        tree.push_back(root->val);\n        helper(root->right, tree);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}