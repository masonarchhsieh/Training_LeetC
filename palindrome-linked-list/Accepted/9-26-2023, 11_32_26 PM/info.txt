{"id":1059761192,"lang":"cpp","lang_name":"C++","time":"1 day, 21 hours","timestamp":1695742346,"status":10,"status_display":"Accepted","runtime":"194 ms","url":"/submissions/detail/1059761192/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"138.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        vector<ListNode*> v;\n        ListNode *itr = head;\n        while (itr) {\n            v.push_back(itr);\n            itr = itr->next;\n        }\n        for (auto i = 0; i < v.size() / 2; i++)\n            if (v.at(i)->val != v.at(v.size() - 1 - i)->val)\n                return false;\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}