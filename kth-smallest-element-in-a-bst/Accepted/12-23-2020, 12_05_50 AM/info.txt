{"id":433374873,"lang":"cpp","lang_name":"C++","time":"2 years, 9 months","timestamp":1608653150,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/433374873/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"25 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        vector<int> tree;\n        \n        help(tree, root);\n        sort(tree.begin(), tree.end());\n        return tree[k-1];\n        \n    }\n    \n    void help(vector<int>& tree, TreeNode* root) {\n        if (!root)\n            return;\n        tree.push_back(root->val);\n        help(tree, root->left);\n        help(tree, root->right);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false,"flag_type":1}