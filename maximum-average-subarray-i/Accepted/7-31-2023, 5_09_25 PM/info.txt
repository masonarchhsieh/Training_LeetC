{"id":1008353773,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1690794565,"status":10,"status_display":"Accepted","runtime":"134 ms","url":"/submissions/detail/1008353773/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"109.7 MB","code":"class Solution {\npublic:\n    double findMaxAverage(vector<int>& nums, int k) {\n        double dp = .0f, res = .0f;\n        for (auto i = 0; i < k; i++)\n            dp += nums[i];\n        res = dp;\n        for (auto i = 1; i <= nums.size() - k; i++) {\n            dp = dp - nums[i-1] + nums[i+k-1];\n            res = max(res, dp);\n        }\n\n        return res / k;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}