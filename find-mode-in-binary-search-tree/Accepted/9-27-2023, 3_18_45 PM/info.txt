{"id":1060331672,"lang":"cpp","lang_name":"C++","time":"1 day, 5 hours","timestamp":1695799125,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1060331672/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"25.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    unordered_map<int, int> m;\npublic:\n    vector<int> findMode(TreeNode* root) {\n        vector<int> res;\n        int max_occ = 0;\n        travelTree(root);\n\n        for (auto i : m)\n            if (i.second > max_occ)\n                max_occ = i.second;\n        for (auto i : m)\n            if (i.second == max_occ)\n                res.push_back(i.first);\n\n        return res;\n    }\n\n    void travelTree(TreeNode* root) {\n        if (!root)\n            return;\n        m[root->val]++;\n        travelTree(root->left);\n        travelTree(root->right);\n    }\n};","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree","has_notes":false,"flag_type":1}