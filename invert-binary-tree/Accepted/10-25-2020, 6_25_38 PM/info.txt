{"id":412936837,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1603621538,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/412936837/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        helper(root);\n        \n        return root;\n    }\n    \n    void helper(TreeNode* node) {\n        if (node == NULL)\n            return;\n        \n        TreeNode* temp = node->left;\n        node->left = node->right;\n        node->right = temp;\n        \n        helper(node->left);\n        helper(node->right);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}