{"id":890138691,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1675352958,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/890138691/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if (!root)\n            return nullptr;\n        \n        TreeNode *tmp_r = root->right;\n        TreeNode *tmp_l = root->left;\n        root->left = invertTree(tmp_r);\n        root->right = invertTree(tmp_l);\n\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}