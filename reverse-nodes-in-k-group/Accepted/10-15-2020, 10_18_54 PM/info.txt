{"id":409065902,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1602771534,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/409065902/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"12.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        ListNode* itr = head;\n        bool first = true;\n        bool stop = false;\n        ListNode* prev;\n        while (itr != nullptr) {\n            vector<ListNode*> temp;\n            for (int i=0; i<k; i++) {\n                if (itr == nullptr) {\n                    return head;\n                }\n                temp.push_back(itr);\n                itr = itr->next;\n            }\n\n            swapNode(temp);\n            if (first) {\n                head = temp[temp.size()-1];\n                first = false;\n            }\n            else {\n                prev->next = temp[temp.size()-1];\n            }    \n            prev = temp[0];\n        }\n        \n        \n        return head;\n    }\n    \n    void swapNode(vector<ListNode*>& list) {\n        ListNode* nextNode = list[list.size()-1]->next;\n        for (int i=list.size()-1; i>0; i--) {\n            list[i]->next = list[i-1];\n        }\n        list[0]->next = nextNode;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}