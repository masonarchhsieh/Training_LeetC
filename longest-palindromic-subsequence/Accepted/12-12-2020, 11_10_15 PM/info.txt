{"id":429876087,"lang":"cpp","lang_name":"C++","time":"2 years, 9 months","timestamp":1607785815,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/429876087/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"10.9 MB","code":"class Solution {\npublic:\n    int longestPalindromeSubseq(string s) {\n        int len = s.length();\n        int dp[len][len];\n        memset(dp, 0, sizeof(dp));\n        \n        for (int i=len-1; i>=0; i--) {\n            dp[i][i] = 1;\n            for (int j=i+1; j<len; j++) {\n                if (s[i] == s[j])\n                    dp[i][j] = dp[i+1][j-1] + 2;\n                else\n                    dp[i][j] = max(dp[i+1][j], dp[i][j-1]);\n            }\n        }\n        \n        \n        return dp[0][len-1];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false,"flag_type":1}