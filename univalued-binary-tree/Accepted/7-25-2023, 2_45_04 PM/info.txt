{"id":1003308546,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1690267504,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1003308546/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isUnivalTree(TreeNode* root) {\n        if (!root)\n            return true;\n        if (root->left && root->left->val != root->val)\n            return false;\n        if (root->right && root->right->val != root->val)\n            return false;\n\n        return isUnivalTree(root->left) & isUnivalTree(root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree","has_notes":false,"flag_type":1}