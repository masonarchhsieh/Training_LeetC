{"id":995176189,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1689437184,"status":10,"status_display":"Accepted","runtime":"288 ms","url":"/submissions/detail/995176189/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if (!root)\n            return 0;\n        if (root->left && root->right)\n            return 1 + min (minDepth(root->left), minDepth(root->right));\n        return 1 + max (minDepth(root->left), minDepth(root->right));\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}