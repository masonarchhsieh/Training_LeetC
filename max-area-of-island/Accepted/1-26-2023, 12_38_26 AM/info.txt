{"id":885119578,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1674664706,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/885119578/","is_pending":"Not Pending","title":"Max Area of Island","memory":"23.2 MB","code":"class Solution {\npublic:\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        int res = 0;\n        int m = grid.size();\n        int n = grid[0].size();\n       \n        for (auto i = 0; i < m; i++) {\n            for (auto j = 0; j < n; j++) {\n                if (grid[i][j] == 1)\n                    res = max(res, dfs(grid, i, j));\n            }\n        }\n        return res;\n    }\n    \n    \n    int dfs(vector<vector<int>>& grid, int x, int y) {\n        int res = 0;\n        \n        if (grid[x][y] == 1) {\n            grid[x][y] = 0;\n            res = 1;\n\n            if (x >= 1)\n                res += dfs(grid, x - 1, y);\n            if (y >= 1)\n                res += dfs(grid, x, y - 1);\n            if (x + 1 < grid.size())\n                res += dfs(grid, x + 1, y);\n            if (y + 1 < grid[0].size())\n                res += dfs(grid, x, y + 1);\n        }\n\n        return res;\n    }\n    \n};","compare_resulttitle_slug":"max-area-of-island","has_notes":false,"flag_type":1}