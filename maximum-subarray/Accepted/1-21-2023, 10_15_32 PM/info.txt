{"id":882400289,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1674310532,"status":10,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/882400289/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"68.3 MB","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        int dp[100000] = { 0 };\n        dp[0] = nums[0];\n        int res = dp[0];\n\n        for (int i = 1; i < nums.size(); i++) {\n            dp[i] = max(dp[i - 1] + nums[i], nums[i]);\n            if (res < dp[i])\n                res = dp[i];\n        }\n\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}