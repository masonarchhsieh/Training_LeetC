{"id":782207458,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1661351381,"status":10,"status_display":"Accepted","runtime":"146 ms","url":"/submissions/detail/782207458/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"68.3 MB","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        int dp[100000] = {0};\n        dp[0] = nums[0];\n        int res = dp[0];\n        \n        for (int i=1; i<nums.size(); i++) {\n            if (dp[i-1] < 0) {\n                dp[i] = max(dp[i-1]  + nums[i], nums[i]);\n                if (res < dp[i])\n                    res = dp[i];\n            }\n            else {\n                dp[i] = max(nums[i], dp[i-1] + nums[i]);\n                if (res < dp[i])\n                    res = dp[i];\n            }\n        }\n        \n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}