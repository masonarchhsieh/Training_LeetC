{"id":1008342218,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1690793313,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1008342218/","is_pending":"Not Pending","title":"Construct String from Binary Tree","memory":"53.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    string tree2str(TreeNode* root) {\n        if (!root)\n            return \"\";\n        \n        string res = to_string(root->val);;\n        if (root->left)\n            res +=  \"(\" + tree2str(root->left) + \")\";\n        if (root->right) {\n            if (!root->left)\n                res += \"()\";\n            res +=  \"(\" + tree2str(root->right) + \")\";\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-string-from-binary-tree","has_notes":false,"flag_type":1}