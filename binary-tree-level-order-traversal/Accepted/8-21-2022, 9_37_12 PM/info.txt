{"id":779450947,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1661089032,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/779450947/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"13.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    \npublic:\n    void helper(TreeNode *root, vector<vector<int>>& lists, int level) {\n        if (!root)\n            return;\n        if (lists.size() <= level) {\n            vector<int> tmp;\n            tmp.push_back(root->val);\n            lists.push_back(tmp);\n        }\n        else\n        {\n            lists[level].push_back(root->val);\n        }\n        \n        helper(root->left, lists, level + 1);\n        helper(root->right, lists, level + 1);\n    }\n    \n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> res;\n        helper(root, res, 0);\n        \n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}