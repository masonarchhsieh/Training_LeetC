{"id":430113207,"lang":"cpp","lang_name":"C++","time":"2 years, 9 months","timestamp":1607838033,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/430113207/","is_pending":"Not Pending","title":"Maximum Binary Tree","memory":"44.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {\n        return construct(nums, nums.begin(), nums.end());       \n    }\n    \n    TreeNode* construct(vector<int>& nums, vector<int>::iterator begin, vector<int>::iterator end) {\n        if (begin >= end)\n            return NULL;\n                \n        vector<int>::iterator max_pos;\n        max_pos = begin;\n        for (vector<int>::iterator it = begin+1; it < end; it++) {\n            if (*max_pos < *it)\n                max_pos = it;\n        }\n        \n        TreeNode *temp = new TreeNode(*max_pos);\n        temp->left = construct(nums, begin, max_pos);\n        temp->right = construct(nums, max_pos+1, end);\n        \n        return temp;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-binary-tree","has_notes":false,"flag_type":1}