{"id":995737195,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1689497502,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/995737195/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSymmetric(TreeNode* root) {\n        if (!root)\n            return true;\n        return isMirror(root->left, root->right);\n    }\n    bool isMirror(TreeNode *left, TreeNode *right) {\n        if (!left && !right)\n            return true;\n        if (!left || !right)\n            return false;\n        if (left->val != right->val)\n            return false;\n        return isMirror(left->left, right->right) & isMirror(left->right, right->left);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}