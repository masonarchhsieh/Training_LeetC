{"id":1001964964,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1690131189,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1001964964/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    vector<int> list;\npublic:\n    int findSecondMinimumValue(TreeNode* root) {\n        if (!root)\n            return -1;\n        helper(root);\n        sort(list.begin(), list.end());\n        vector<int>::iterator it;\n        it = unique(list.begin(), list.end());\n        return (it == list.begin() + 1)? -1 : list[1];\n    }\n\n    void helper(TreeNode* root) {\n        if (!root)\n            return;\n        helper(root->left);\n        list.push_back(root->val);\n        helper(root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false,"flag_type":1}