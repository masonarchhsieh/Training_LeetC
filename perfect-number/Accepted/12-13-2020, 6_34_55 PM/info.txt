{"id":430181696,"lang":"cpp","lang_name":"C++","time":"2 years, 9 months","timestamp":1607855695,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/430181696/","is_pending":"Not Pending","title":"Perfect Number","memory":"6.4 MB","code":"class Solution {\npublic:\n    bool checkPerfectNumber(int num) {\n        int sqrt_num = (int) sqrt(num);\n        vector<int> divisors;\n        for (int i=1; i<=sqrt_num; i++) {\n            if (num % i == 0) {\n                int alt = num / i;\n                divisors.push_back(i);\n                divisors.push_back(alt);\n            }\n        }\n        sort(divisors.begin(), divisors.end());\n        vector<int>::iterator it;\n        it = unique(divisors.begin(), divisors.end());\n        divisors.resize(distance(divisors.begin(), it));\n        \n        int sum = 0;\n        for (int i=0; i<divisors.size(); i++) {\n            sum += divisors[i];\n        }\n        \n        return (sum == 2 * num)? true : false;;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"perfect-number","has_notes":false,"flag_type":1}