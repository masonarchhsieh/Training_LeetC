{"id":1043703114,"lang":"cpp","lang_name":"C++","time":"2 weeks, 6 days","timestamp":1694157445,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1043703114/","is_pending":"Not Pending","title":"Evaluate Boolean Binary Tree","memory":"14.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool evaluateTree(TreeNode* root) {\n        if (!root)\n            return true;\n        if (!root->left && !root->right)\n            return root->val;\n        if (root->val == 2)\n            return evaluateTree(root->left) | evaluateTree(root->right);\n        return evaluateTree(root->left) & evaluateTree(root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"evaluate-boolean-binary-tree","has_notes":false,"flag_type":1}