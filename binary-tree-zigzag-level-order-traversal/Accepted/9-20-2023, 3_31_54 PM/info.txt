{"id":1054301693,"lang":"cpp","lang_name":"C++","time":"1 week, 1 day","timestamp":1695195114,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1054301693/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"13.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> res;\n        helper(res, root, 0);\n        for (auto i = 1; i < res.size(); i+=2)\n            reverse(res[i].begin(), res[i].end());\n        return res;\n    }\n\n    void helper(vector<vector<int>> &res, TreeNode* root, int level) {\n        if (!root)\n            return;\n        if (res.size() <= level)\n            res.push_back({root->val});\n        else\n            res[level].push_back(root->val);\n        helper(res, root->left, level + 1);\n        helper(res, root->right, level + 1);\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}