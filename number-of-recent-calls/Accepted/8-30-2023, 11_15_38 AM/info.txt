{"id":1035598991,"lang":"cpp","lang_name":"C++","time":"4 weeks, 1 day","timestamp":1693365338,"status":10,"status_display":"Accepted","runtime":"271 ms","url":"/submissions/detail/1035598991/","is_pending":"Not Pending","title":"Number of Recent Calls","memory":"287.7 MB","code":"class RecentCounter {\n    vector<int> calls;\npublic:\n    RecentCounter() {\n        \n    }\n    \n    int ping(int t) {\n        calls.push_back(t);\n        \n        int lastIdx = -1;\n        for (auto i = 0; i < calls.size(); i++) {\n            if (calls[i] < t - 3000) {\n                lastIdx = i;\n                continue;\n            }\n            break;\n        }\n        cout << lastIdx << endl;\n        if (lastIdx > -1) {\n            calls = vector(calls.begin() + lastIdx + 1, calls.end());\n        }\n\n        return calls.size();\n    }\n};\n\n/**\n * Your RecentCounter object will be instantiated and called as such:\n * RecentCounter* obj = new RecentCounter();\n * int param_1 = obj->ping(t);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-recent-calls","has_notes":false,"flag_type":1}