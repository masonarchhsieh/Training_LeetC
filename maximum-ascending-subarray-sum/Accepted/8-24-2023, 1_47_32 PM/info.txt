{"id":1030205709,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1692856052,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1030205709/","is_pending":"Not Pending","title":"Maximum Ascending Subarray Sum","memory":"8.4 MB","code":"class Solution {\npublic:\n    int maxAscendingSum(vector<int>& nums) {\n        int max_sum = nums[0];\n        int tmp = nums[0];\n        for (auto i = 1; i < nums.size(); i++) {\n            if (nums[i] <= nums[i - 1]) {\n                max_sum = max(max_sum, tmp);\n                tmp = nums[i];\n            } else {\n                tmp += nums[i];\n            }\n        }\n        max_sum = max(max_sum, tmp);\n        return max_sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-ascending-subarray-sum","has_notes":false,"flag_type":1}