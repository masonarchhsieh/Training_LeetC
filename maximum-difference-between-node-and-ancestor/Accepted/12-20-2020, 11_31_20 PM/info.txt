{"id":432635959,"lang":"cpp","lang_name":"C++","time":"2 years, 9 months","timestamp":1608478280,"status":10,"status_display":"Accepted","runtime":"656 ms","url":"/submissions/detail/432635959/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"11.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxAncestorDiff(TreeNode* root) {\n        if (!root)\n            return INT_MIN;\n        \n        \n        int maxanc_min = max(root->val - findMinChild(root->left), root->val - findMinChild(root->right));\n        int maxanc_max = max(findMaxChild(root->left) - root->val, findMaxChild(root->right) - root->val);\n\n        return max(max(max(maxAncestorDiff(root->left), maxAncestorDiff(root->right)), maxanc_min), maxanc_max);\n    }\n    \n    int findMinChild(TreeNode* root) {\n        if (!root)\n            return INT_MAX;\n        \n        return min(min(findMinChild(root->left), findMinChild(root->right)), root->val);\n    }\n    \n    int findMaxChild(TreeNode* root) {\n        if (!root)\n            return 0;\n        \n        return max(max(findMaxChild(root->left), findMaxChild(root->right)), root->val);\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor","has_notes":false,"flag_type":1}