{"id":888213250,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1675096776,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/888213250/","is_pending":"Not Pending","title":"House Robber","memory":"7.9 MB","code":"class Solution {\npublic:\n    int getMaxAmount(int indx, vector<int> &nums, vector<int> &dp) {\n        // base cases, \n        // if indx == 0, then can rob this house \n        if(indx == 0) return dp[0] = nums[0];\n        // if indx == 1, then can rob either this or 0th house whichever has maximum amount\n        if(indx == 1) return dp[1] = max(nums[0], nums[1]);\n\n        if(dp[indx] != -1) return dp[indx];\n\n        int robThisHouse = nums[indx] + getMaxAmount(indx - 2, nums, dp);\n        int leaveThisHouse = getMaxAmount(indx - 1, nums, dp);\n\n        return dp[indx] = max(robThisHouse, leaveThisHouse);\n    }\n    int rob(vector<int>& nums) {\n        // using memoization (dp)\n        int n = nums.size();\n        vector<int> dp (nums.size() + 1, -1);\n        return getMaxAmount(n -1, nums, dp);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber","has_notes":false,"flag_type":1}