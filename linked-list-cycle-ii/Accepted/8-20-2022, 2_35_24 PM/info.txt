{"id":778294190,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1660977324,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/778294190/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"7.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        if (!head)\n            return head;\n        \n        ListNode *slow = head, *fast = head, *entry = head;\n        \n        while (fast->next != NULL && fast->next->next != NULL)\n        {\n            slow = slow->next;\n            fast = fast->next->next;\n            \n            if (slow == fast)\n            {\n                while (slow != entry)\n                {\n                    slow = slow->next;\n                    entry = entry->next;\n                }\n                \n                return entry;\n            }\n        }\n        \n\n        return NULL;\n    }\n};","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}