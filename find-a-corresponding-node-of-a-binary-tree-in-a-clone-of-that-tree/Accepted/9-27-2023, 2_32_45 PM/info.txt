{"id":1060303342,"lang":"cpp","lang_name":"C++","time":"1 day, 6 hours","timestamp":1695796365,"status":10,"status_display":"Accepted","runtime":"419 ms","url":"/submissions/detail/1060303342/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"164.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* getTargetCopy(TreeNode* original, TreeNode* cloned, TreeNode* target) {\n        if (!original || !cloned)\n            return NULL;\n\n        if (original == target) {\n            return cloned;\n        }\n        \n        TreeNode *left_node = getTargetCopy(original->left, cloned->left, target);\n        TreeNode *right_node = getTargetCopy(original->right, cloned->right, target);\n\n        if (left_node && left_node->val == target->val)\n            return left_node;\n\n        return right_node;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree","has_notes":false,"flag_type":1}