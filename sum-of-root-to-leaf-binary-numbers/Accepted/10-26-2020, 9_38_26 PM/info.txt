{"id":413363763,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1603719506,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/413363763/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"19.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sumRootToLeaf(TreeNode* root) {\n        if (root == NULL)\n            return 0;\n        \n        vector<string> ttls;\n        helper(root, ttls, \"\");\n        \n        int sum = 0;\n        for (int i=0; i<ttls.size(); i++) {\n            sum += convertBinToInt(ttls[i]);\n        }\n        \n        return sum;\n    }\n    \n    int convertBinToInt(string binary) {       \n        int res = 0;\n        int itr = 0;\n        while (itr < binary.length()) {\n            if (binary[binary.length()-1-itr] == '1')\n                res = pow(2, itr) + res;\n            itr++;\n        }\n        \n        return res;\n    }\n    \n    void helper(TreeNode* root, vector<string>& ttls, string prev) {\n        if (root == NULL)\n            return;\n        else\n            prev = prev + to_string(root->val);\n\n        if (root->left == NULL && root->right == NULL)\n            ttls.push_back(prev);\n        else {\n\n            helper(root->left, ttls, prev);\n            helper(root->right, ttls, prev);\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers","has_notes":false,"flag_type":1}