{"id":886754051,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1674899097,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/886754051/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"11.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nstatic bool Pred(ListNode *l1, ListNode *l2) {\n     return (l1->val == l2->val);\n }\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if (!head || !head->next)\n            return head;\n        \n        ListNode *res = head, *itr = head->next;\n        while (itr) {\n            if (res->val != itr->val) {\n                res->next = itr;\n                res = res->next;\n            } \n            else {\n                res->next = nullptr;\n            }\n            itr = itr->next;\n        }\n\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list","has_notes":false,"flag_type":1}