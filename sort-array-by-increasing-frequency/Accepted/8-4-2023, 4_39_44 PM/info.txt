{"id":1011899087,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1691138384,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1011899087/","is_pending":"Not Pending","title":"Sort Array by Increasing Frequency","memory":"11.2 MB","code":"bool cmp(const pair<int, int> &T1, const pair<int, int> &T2) {\n    if (T1.second == T2.second)\n        return T1.first > T2.first;\n    return T1.second < T2.second;\n}\n\nclass Solution {\npublic:\n    vector<int> frequencySort(vector<int>& nums) {\n        if (nums.size() == 1)\n            return nums;\n        \n        vector<int> res;\n        vector<pair<int, int>> nums_list;\n        \n        sort(nums.begin(), nums.end());\n        int cnt = 1;\n        for (auto i = 1; i < nums.size(); i++) {\n            if (i == nums.size() - 1) {\n                if (nums[i] != nums[i - 1]) {\n                    nums_list.push_back(make_pair(nums[i - 1], cnt));\n                    nums_list.push_back(make_pair(nums[i], 1));\n                }\n                else\n                    nums_list.push_back(make_pair(nums[i], cnt + 1));\n                break;\n            }\n            else if (nums[i] != nums[i - 1]) {\n                nums_list.push_back(make_pair(nums[i - 1], cnt));\n                cnt = 1;\n            } else\n                cnt++;\n        }\n        sort(nums_list.begin(), nums_list.end(), cmp);\n        for (auto i : nums_list)\n            for (auto j = 0; j < i.second; j++) {\n                res.push_back(i.first);\n            }  \n\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-array-by-increasing-frequency","has_notes":false,"flag_type":1}