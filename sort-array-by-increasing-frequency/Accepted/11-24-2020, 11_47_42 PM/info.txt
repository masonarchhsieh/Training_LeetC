{"id":423670738,"lang":"cpp","lang_name":"C++","time":"2 years, 10 months","timestamp":1606232862,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/423670738/","is_pending":"Not Pending","title":"Sort Array by Increasing Frequency","memory":"11.3 MB","code":"bool sortArr(const pair<int, int> f, const pair<int, int> s) {\n    if (f.second > s.second)\n        return true;\n    else if (f.second == s.second) {\n        if (f.first < s.first)\n            return true;\n    }\n    \n    return false;\n}\n\nclass Solution {\npublic:\n    vector<int> frequencySort(vector<int>& nums) {\n        vector<pair<int, int>> num_pairs;\n        \n        for (int i=0; i<nums.size(); i++) {\n            bool check = true;\n            for (int j=0; j<num_pairs.size(); j++) {\n                if (num_pairs[j].first == nums[i]) {\n                    check = false;\n                    num_pairs[j].second++;\n                    break;\n                }\n            }\n            if (check) {\n                pair p = make_pair(nums[i], 1);\n                num_pairs.push_back(p);\n            }\n        }\n        \n        sort(num_pairs.begin(), num_pairs.end(), sortArr);\n        \n        vector<int> res;\n        for (int i=0; i<num_pairs.size(); i++) {\n            for (int j=0; j<num_pairs[i].second; j++) {\n                res.push_back(num_pairs[i].first);\n            }\n        }\n        \n        reverse(res.begin(), res.end());\n        \n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-array-by-increasing-frequency","has_notes":false,"flag_type":1}