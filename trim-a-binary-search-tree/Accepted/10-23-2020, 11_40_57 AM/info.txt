{"id":412114233,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1603424457,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/412114233/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"24.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n       \n    TreeNode* trimBST(TreeNode* root, int low, int high) {\n        if (root == NULL)\n            return root;\n        \n        if (root->val < low)\n            return trimBST(root->right, low, high);\n        \n        if (root->val > high)\n            return trimBST(root->left, low, high);\n        \n        root->left = trimBST(root->left, low, high);\n        root->right = trimBST(root->right, low, high);\n\n        \n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trim-a-binary-search-tree","has_notes":false,"flag_type":1}