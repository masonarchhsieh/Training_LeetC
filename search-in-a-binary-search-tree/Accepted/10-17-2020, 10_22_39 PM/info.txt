{"id":409820709,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1602944559,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/409820709/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"35.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if (root == nullptr)\n            return NULL;\n        \n        while (root != nullptr) {\n            if (val == root->val)\n                return root;\n            if (val < root->val)\n                root = root->left;\n            else\n                root = root->right;\n        }\n        \n        return NULL;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}