{"id":456780589,"lang":"cpp","lang_name":"C++","time":"2 years, 7 months","timestamp":1613485043,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/456780589/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"15.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        stack<ListNode*> v1, v2;\n        \n        while (headA) {\n            v1.push(headA);\n            headA = headA->next;\n        }\n        \n        while (headB) {\n            v2.push(headB);\n            headB = headB->next;\n        }\n        \n        ListNode* res = NULL;\n        while (v1.size() > 0 && v2.size() > 0 && v1.top() == v2.top()) {\n            res = v1.top();\n            v1.pop();\n            v2.pop();\n        }\n        if (!res)\n            return NULL;\n        \n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"flag_type":1}