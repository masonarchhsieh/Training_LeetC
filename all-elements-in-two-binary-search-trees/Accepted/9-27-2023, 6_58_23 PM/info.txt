{"id":1060447440,"lang":"cpp","lang_name":"C++","time":"1 day, 1 hour","timestamp":1695812303,"status":10,"status_display":"Accepted","runtime":"133 ms","url":"/submissions/detail/1060447440/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"84.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    vector<int> res;\npublic:\n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n        vector<int> res;\n        travelTree(root1, res);\n        travelTree(root2, res);\n        sort(res.begin(), res.end());\n\n        return res;\n    }\n\n    void travelTree(TreeNode* root, vector<int>& res) {\n        if (!root)\n            return;\n        travelTree(root->left, res);\n        res.push_back(root->val);\n        travelTree(root->right, res);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees","has_notes":false,"flag_type":1}