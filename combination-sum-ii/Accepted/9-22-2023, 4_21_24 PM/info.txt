{"id":1056130439,"lang":"cpp","lang_name":"C++","time":"6 days, 4 hours","timestamp":1695370884,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1056130439/","is_pending":"Not Pending","title":"Combination Sum II","memory":"12.1 MB","code":"\nclass Solution {\n    set<vector<int>> res_s;\npublic:\n    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {\n        vector<vector<int>> res;\n        sort(candidates.begin(), candidates.end());\n        // if (accumulate(candidates.begin(), candidates.end(), 0) < target)\n        //     return res;\n        backtrack(candidates, {}, 0, target);\n\n        res.insert(res.end(), res_s.begin(), res_s.end());\n        return res;\n    }\n\n    void backtrack(vector<int>& candidates, vector<int> combination, int pos, int target) {\n        if (target == 0) {\n            res_s.insert(combination);\n            return;\n        }\n        if (pos >= candidates.size() || target < 0)\n            return;\n        \n        for (auto i = pos; i < candidates.size(); i++) {\n            if (i > pos && candidates[i] == candidates[i - 1])\n                continue;\n            if (candidates[i] > target)\n                break;\n\n            combination.push_back(candidates[i]);\n            backtrack(candidates, combination, i + 1, target - candidates[i]);\n            combination.pop_back();\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}