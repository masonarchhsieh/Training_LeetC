{"id":407311995,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1602411186,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/407311995/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"22 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        \n        if (root == nullptr)\n            return true;\n        \n        if (abs(height(root->left) - height(root->right)) < 2)\n        {\n            return isBalanced(root->left) && isBalanced(root->right);\n        }\n        \n        return false;\n    }\n       \n    int height(TreeNode* root)\n    {\n        if (root == nullptr)\n            return 0;\n     \n        return 1 + max(height(root->left), height(root->right));\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}