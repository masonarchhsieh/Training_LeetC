{"id":1033824482,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1693204586,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1033824482/","is_pending":"Not Pending","title":"Determine Whether Matrix Can Be Obtained By Rotation","memory":"11.3 MB","code":"class Solution {\npublic:\n    bool findRotation(vector<vector<int>>& mat, vector<vector<int>>& target) {\n        if (mat == target)\n            return true;\n        for (auto i = 0; i < 4; i++) {\n            rotate(mat);\n            //print(mat);\n            if (mat == target)\n                return true;\n    \n        }\n        \n        return false;   \n    }\n\n    void rotate(vector<vector<int>>& mat) {\n        for (auto i = 0; i < mat.size(); i++) {\n            for (auto j = i + 1; j < mat[i].size(); j++) {\n                swap(mat[i][j], mat[j][i]);\n            }\n        }\n\n        // reverse individual rows\n        for (auto i = 0; i < mat.size(); i++) {\n            int low = 0, high = mat.size() - 1;\n            while (low < high) {\n                swap(mat[i][low], mat[i][high]);\n                low++;\n                high--;\n            }\n        }\n    }\n\n    void print(vector<vector<int>>& mat) {\n        for (auto i = 0; i < mat.size(); i++) {\n            for (auto j= 0; j < mat[0].size(); j++) {\n                cout << mat[i][j] << \", \";\n            }\n            cout << endl;\n        }\n        cout << \"--------------\" << endl;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"determine-whether-matrix-can-be-obtained-by-rotation","has_notes":false,"flag_type":1}