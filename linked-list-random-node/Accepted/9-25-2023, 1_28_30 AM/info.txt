{"id":1058076797,"lang":"cpp","lang_name":"C++","time":"3 days, 19 hours","timestamp":1695576510,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1058076797/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"16.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\n    vector<int> v;\npublic:\n    Solution(ListNode* head) {\n        v.clear();\n        while (head) {\n            v.push_back(head->val);\n            head = head->next;\n        }\n    }\n    \n    int getRandom() {\n        return v.at(rand() % v.size());\n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(head);\n * int param_1 = obj->getRandom();\n */","compare_result":"11111111","title_slug":"linked-list-random-node","has_notes":false,"flag_type":1}