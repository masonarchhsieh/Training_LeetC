{"id":1053144533,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1695091463,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1053144533/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"7.1 MB","code":"class Solution {\n    vector<vector<string>> buttons = {\n        {\"a\", \"b\", \"c\"},\n        {\"d\", \"e\", \"f\"},\n        {\"g\", \"h\", \"i\"},\n        {\"j\", \"k\", \"l\"},\n        {\"m\", \"n\", \"o\"},\n        {\"p\", \"q\", \"r\", \"s\"},\n        {\"t\", \"u\", \"v\"},\n        {\"w\", \"x\", \"y\", \"z\"},\n    };\n\n    vector<string> res;\npublic:\n    vector<string> letterCombinations(string digits) {\n        if (digits.length() < 1)\n            return res;\n        backtrack(\"\", digits);\n        return res;\n    }\n\n    void backtrack(string combination, string digits) {\n        if (digits == \"\") {\n            res.push_back(combination);\n            return;\n        }\n        int pos = digits.back() - '2';\n        digits.pop_back();\n        if (pos < 0 || pos > 8)\n            backtrack(combination, digits);\n        for (auto i = 0; i < buttons[pos].size(); i++) {\n            backtrack( buttons[pos][i] + combination, digits);\n        }\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}