{"id":1006934160,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1690639121,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1006934160/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"6.9 MB","code":"class MyStack {\n    queue<int> st, st_b;\npublic:\n    MyStack() {\n    }\n    \n    void push(int x) {\n        while (!st.empty()) {\n            st_b.push(st.front());\n            st.pop();\n        }\n        st.push(x);\n        while (!st_b.empty()) {\n            st.push(st_b.front());\n            st_b.pop();\n        }\n    }\n    \n    int pop() {\n        int tmp = st.front();\n        st.pop();\n        return tmp;\n    }\n    \n    int top() {\n        return st.front();\n    }\n    \n    bool empty() {\n        return st.empty();\n    }\n};\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack* obj = new MyStack();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->top();\n * bool param_4 = obj->empty();\n */","compare_result":"11111111111111111","title_slug":"implement-stack-using-queues","has_notes":false,"flag_type":1}