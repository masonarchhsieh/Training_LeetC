{"id":412936227,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1603621326,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/412936227/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"25.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int getMinimumDifference(TreeNode* root) {\n        vector<int> tree;\n        helper(root, tree);\n        \n        sort(tree.begin(), tree.end());\n        int res = INT_MAX;\n        for (int i=1; i<tree.size(); i++) {\n            res = (abs(tree[i] - tree[i-1]) < res)? abs(tree[i] - tree[i-1]) : res;\n            \n        }\n        \n        return res;\n    }\n    \n    void helper(TreeNode* root, vector<int>& tree) {\n        if (root == NULL)\n            return;\n        \n        tree.push_back(root->val);\n        helper(root->left, tree);\n        helper(root->right, tree);\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-absolute-difference-in-bst","has_notes":false,"flag_type":1}