{"id":996776530,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1689606163,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/996776530/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return divide_and_conquer(nums, 0, nums.size() - 1);\n    }\n\n    TreeNode* divide_and_conquer(vector<int>& nums, int left, int right) {\n        if (left > right)\n            return NULL;\n        int mid = (left + right) / 2;\n        return new TreeNode(nums[mid], \n            divide_and_conquer(nums, left, mid - 1),\n            divide_and_conquer(nums, mid + 1, right)\n            );\n    }\n\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}