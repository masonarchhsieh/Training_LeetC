{"id":1020245560,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1691934866,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/1020245560/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        if (!root)\n            return 0;\n\n        return max(help(root->left) + help(root->right), \n                max(diameterOfBinaryTree(root->left), diameterOfBinaryTree(root->right)));\n    }\n    \n    int help(TreeNode* root) {\n        if (!root)\n            return 0;\n            \n        return 1 + max(help(root->left), help(root->right));\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}