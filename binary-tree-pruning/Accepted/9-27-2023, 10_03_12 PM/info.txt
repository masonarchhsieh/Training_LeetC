{"id":1060550238,"lang":"cpp","lang_name":"C++","time":"22 hours, 31 minutes","timestamp":1695823392,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1060550238/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"9.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* pruneTree(TreeNode* root) {\n        if (!root)\n            return root;\n        if (!hasOne(root)) {\n            return NULL;\n        }\n        root->left = pruneTree(root->left);\n        root->right = pruneTree(root->right);\n        return root;\n    }\n\n    bool hasOne(TreeNode* root) {\n        if (!root)\n            return false;\n        if (root->val == 1)\n            return true;\n        \n        return hasOne(root->left) | hasOne(root->right);\n    }\n\n\n};","compare_result":"1111111111111111111111111111111","title_slug":"binary-tree-pruning","has_notes":false,"flag_type":1}