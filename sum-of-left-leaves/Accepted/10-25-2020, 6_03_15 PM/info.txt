{"id":412932824,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1603620195,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/412932824/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"13.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sumOfLeftLeaves(TreeNode* root) {\n        int sum = 0;\n        helper(root, 'M', sum);\n        \n        return sum;\n    }\n    \n    void helper(TreeNode* node, char side, int& sum) {\n        if (node == NULL)\n            return;\n        if (node->left == NULL && node->right == NULL) {\n            if (side == 'L') {\n                sum += node->val;\n            }\n        }\n        else {\n            helper(node->left, 'L', sum);\n            helper(node->right, 'R', sum);\n        }\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}