{"id":429821524,"lang":"cpp","lang_name":"C++","time":"2 years, 9 months","timestamp":1607768469,"status":10,"status_display":"Accepted","runtime":"252 ms","url":"/submissions/detail/429821524/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"101.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    string rl;\npublic:\n    int dfs(TreeNode* node, bool left, int depth) {\n        return node == nullptr ? depth : \n            max(dfs(left ? node->left : node->right, !left, depth + 1), \n               dfs(left ? node->right : node->left, left, 0));    \n    }\n    \n    int longestZigZag(TreeNode* root) {\n        return max(dfs(root, true, -1), dfs(root, false, -1));\n    }\n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false,"flag_type":1}