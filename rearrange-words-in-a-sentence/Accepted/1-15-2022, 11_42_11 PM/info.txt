{"id":620332849,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1642261331,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/620332849/","is_pending":"Not Pending","title":"Rearrange Words in a Sentence","memory":"17.7 MB","code":"#include <algorithm> \nstatic bool Pred (string &a, string &b)\n{\n    return a.length() < b.length();\n}\n\nclass Solution {\npublic:\n    string arrangeWords(string text) {       \n        stringstream sstr;\n        vector<string> tmp; \n        map<int, vector<string>> my_map;\n        map<int, vector<string>>::iterator it;\n        \n        sstr << text;\n        string s;\n        while (!sstr.eof())\n        {\n            sstr >> s;\n            std::transform(s.begin(), s.end(), s.begin(), ::tolower);\n            it = my_map.find(s.length());\n            \n            if (it != my_map.end())\n                my_map[s.length()].push_back(s);\n            else\n                my_map.insert(pair<int,vector<string>>(s.length(), vector<string>{s}));\n        }\n      \n        string res;\n        for (it=my_map.begin(); it != my_map.end(); ++it)\n        {\n            if (it != my_map.begin())\n                res += \" \";\n            for (int i=0; i<it->second.size(); i++)\n            {\n                res += it->second[i];\n                if (i != it->second.size() - 1)\n                    res+=\" \";\n            }\n        }\n        std::transform(res.begin(), res.begin()+1, res.begin(), ::toupper);\n\n        return res;\n\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rearrange-words-in-a-sentence","has_notes":false,"flag_type":1}