{"id":886318425,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1674831069,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/886318425/","is_pending":"Not Pending","title":"Remove Linked List Elements","memory":"15.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeElements(ListNode* head, int val) {\n        vector<ListNode*> list;\n        while (head != NULL) {\n            if (head->val != val)\n                list.push_back(head);\n            head = head->next;\n        }\n        \n        if (list.size() == 0)\n            return NULL;\n        \n        for (int i=0; i<list.size(); i++)\n        {\n            if (i == 0)\n                list[i]->next = NULL;\n            else\n                list[i-1]->next = list[i];\n        }\n        list[list.size() - 1]->next = NULL;\n        \n        return list[0];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-linked-list-elements","has_notes":false,"flag_type":1}