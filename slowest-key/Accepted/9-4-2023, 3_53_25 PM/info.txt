{"id":1040101683,"lang":"cpp","lang_name":"C++","time":"3 weeks, 3 days","timestamp":1693814005,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1040101683/","is_pending":"Not Pending","title":"Slowest Key","memory":"11.4 MB","code":"// Structure of the operator\n// overloading for comparison\nstruct myComp {\n    constexpr bool operator()(\n        pair<char, int> const& a,\n        pair<char, int> const& b)\n        const noexcept\n    {\n        if (a.second == b.second)\n            return a < b;\n        return a.second <= b.second;\n    }\n};\n\nclass Solution {\npublic:\n    char slowestKey(vector<int>& releaseTimes, string keysPressed) {\n        priority_queue<pair<char, int>, vector<pair<char, int>>, myComp> pq;\n        pq.push(make_pair(keysPressed[0], releaseTimes[0]));\n        \n        for (auto i = 1; i < releaseTimes.size(); i++) {\n            pq.push(make_pair(keysPressed[i], releaseTimes[i] - releaseTimes[i - 1]));\n        }\n\n        pair<int, int> top = pq.top();\n        return top.first;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"slowest-key","has_notes":false,"flag_type":1}