{"id":422621447,"lang":"cpp","lang_name":"C++","time":"2 years, 10 months","timestamp":1605968530,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/422621447/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"7.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        vector<ListNode*> list;\n        ListNode* itr = head;\n        while (itr != NULL) {\n            list.push_back(itr);\n            itr = itr->next;\n        }\n        \n        return list[list.size()/2];\n    }\n};","compare_result":"111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}