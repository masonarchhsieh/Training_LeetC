{"id":885116179,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1674664363,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/885116179/","is_pending":"Not Pending","title":"Flood Fill","memory":"14 MB","code":"class Solution {\n    \npublic:\n    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {\n        int old_color = image[sr][sc];\n        if (old_color != color)\n            dfs(image, sr, sc, old_color, color);\n        return image;\n    }\n    \n    void dfs(vector<vector<int>>& image, int r, int c, int color, int new_color) {\n        if (image[r][c] == color) {\n            image[r][c] = new_color;\n            if (r >= 1)\n                dfs(image, r - 1, c, color, new_color);\n            if (c >= 1)\n                dfs(image, r, c - 1, color, new_color);\n            if (r + 1 < image.size())\n                dfs(image, r + 1, c, color, new_color);\n            if (c + 1 < image[0].size())\n                dfs(image, r, c + 1, color, new_color);\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill","has_notes":false,"flag_type":1}