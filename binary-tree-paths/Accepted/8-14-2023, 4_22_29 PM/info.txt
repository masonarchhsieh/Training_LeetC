{"id":1020917612,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1692001349,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1020917612/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"14.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<string> binaryTreePaths(TreeNode* root) {\n        vector<string> res;\n        helper(root, res, \"\");\n\n        return res;\n    }\n\n    void helper(TreeNode *root, vector<string>& list, string prev) {\n        string tmp = prev + std::to_string(root->val);\n        if (!root->left && !root->right)\n            list.push_back(tmp);\n        if (root->left)\n            helper(root->left, list, tmp + \"->\");\n        if (root->right)\n            helper(root->right, list, tmp + \"->\");\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false,"flag_type":1}