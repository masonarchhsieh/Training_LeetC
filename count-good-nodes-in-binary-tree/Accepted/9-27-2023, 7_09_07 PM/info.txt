{"id":1060452769,"lang":"cpp","lang_name":"C++","time":"1 day, 1 hour","timestamp":1695812947,"status":10,"status_display":"Accepted","runtime":"95 ms","url":"/submissions/detail/1060452769/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"86.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int goodNodes(TreeNode* root) {\n        if (!root)\n            return 0;\n        int res = 0;\n        travelTree(root, res, root->val);\n        return res;\n    }\n\n    void travelTree(TreeNode* root, int& n_good, int cur_max) {\n        if (!root)\n            return;\n        if (root->val >= cur_max)\n            n_good++;\n\n        travelTree(root->left, n_good, max(cur_max, root->val));\n        travelTree(root->right, n_good, max(cur_max, root->val));\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}