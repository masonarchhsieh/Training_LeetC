{"id":814306923,"lang":"cpp","lang_name":"C++","time":"11 months, 4 weeks","timestamp":1664811912,"status":10,"status_display":"Accepted","runtime":"186 ms","url":"/submissions/detail/814306923/","is_pending":"Not Pending","title":"Combination Sum","memory":"69.7 MB","code":"class Solution {\npublic:\n    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {\n        vector<vector<int>> ans;\n        vector<int> ds;\n        \n        helper(target, 0, candidates, ds, ans);\n        vector<vector<int>>::iterator it = unique(ans.begin(), ans.end());\n        ans.resize(std::distance(ans.begin(), it));\n        \n        return ans;\n    }\n    \n    void helper(int target, int idx, vector<int>& candidates, vector<int> ds, vector<vector<int>>& ans) {\n        //int sum = std::accumulate(ds.begin(), ds.end(), 0);\n        //std::cout << sum << std::endl;\n        if (std::accumulate(ds.begin(), ds.end(), 0) > target || idx >= candidates.size())\n            return;\n        if (std::accumulate(ds.begin(), ds.end(), 0) == target) {\n            ans.push_back(ds);\n            return;\n        }\n        \n        ds.push_back(candidates[idx]);\n        helper(target, idx, candidates, ds, ans);\n        ds.pop_back();\n        helper(target, idx + 1, candidates, ds, ans);      \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}