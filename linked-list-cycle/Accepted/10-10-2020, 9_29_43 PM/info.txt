{"id":406920666,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1602336583,"status":10,"status_display":"Accepted","runtime":"488 ms","url":"/submissions/detail/406920666/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        vector<ListNode*> list;\n        bool cycle = false;\n        \n        while (head != nullptr)\n        {\n            for (int i=0; i<list.size();i++)\n            {\n                if (head == list[i])\n                {\n                    return true;\n                }\n            }\n            \n            list.push_back(head);\n            \n            head = head->next;\n        }\n        \n        \n        return false;\n    }\n};","compare_result":"11111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}