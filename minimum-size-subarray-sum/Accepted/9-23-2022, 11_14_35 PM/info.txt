{"id":806893968,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1663946075,"status":10,"status_display":"Accepted","runtime":"103 ms","url":"/submissions/detail/806893968/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"28.3 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int left = 0, right = 0;\n        int sum = 0;\n        int minCount = INT_MAX;\n        int subArrayCount = 0;\n        \n        while (right < nums.size()) {\n            sum += nums[right];\n            subArrayCount++;\n            right++;\n            \n            while (sum >= target) {\n                minCount = min(minCount, subArrayCount);\n                subArrayCount--;\n                sum -= nums[left];\n                left++;\n            }\n        }\n        \n        \n        return (minCount == INT_MAX)? 0 : minCount;\n    }\n};","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}