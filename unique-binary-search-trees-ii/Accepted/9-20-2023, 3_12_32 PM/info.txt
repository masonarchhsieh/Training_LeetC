{"id":1054289347,"lang":"cpp","lang_name":"C++","time":"1 week, 1 day","timestamp":1695193952,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1054289347/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<TreeNode*> generateTrees(int n) {\n        return helper(1, n);\n    }\n\n    vector<TreeNode*> helper(int start, int end) {\n        vector<TreeNode*> res;\n\n        if (start > end) {\n            res.push_back(nullptr);\n            return res;\n        }\n\n        for (auto i = start; i <= end; i++) {\n            vector<TreeNode*> leftTree = helper(start, i - 1);\n            vector<TreeNode*> rightTree = helper(i + 1, end);\n\n            for (auto l : leftTree) {\n                for (auto r : rightTree) {\n                    TreeNode *root = new TreeNode(i, l, r);\n                    res.push_back(root);\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii","has_notes":false,"flag_type":1}