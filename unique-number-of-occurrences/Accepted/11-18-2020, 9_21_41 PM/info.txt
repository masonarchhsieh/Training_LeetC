{"id":421636804,"lang":"cpp","lang_name":"C++","time":"2 years, 10 months","timestamp":1605705701,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/421636804/","is_pending":"Not Pending","title":"Unique Number of Occurrences","memory":"8.6 MB","code":"   bool sortbysecdesc(const pair<int,int> &a,\n                   const pair<int,int> &b)\n    {\n           return a.second>b.second;\n    }\nclass Solution {\npublic:   \n    bool uniqueOccurrences(vector<int>& arr) {\n        \n        vector<pair<int, int>> occs;\n        \n        for (int i=0; i<arr.size(); i++) {\n            \n            bool check = true;\n            for (int j=0; j<occs.size(); j++) {\n                if (occs[j].first == arr[i]) {\n                    check = false;\n                    occs[j].second++;\n                    break;\n                }\n            }\n            if (check) {\n                occs.push_back(make_pair(arr[i], 1));\n            }\n        }\n        \n        sort(occs.begin(), occs.end(), sortbysecdesc);\n        for (int i=1; i<occs.size(); i++) {\n            if (occs[i-1].second == occs[i].second)\n                return false;\n        }\n    \n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-number-of-occurrences","has_notes":false,"flag_type":1}