{"id":816573006,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1665070301,"status":10,"status_display":"Accepted","runtime":"575 ms","url":"/submissions/detail/816573006/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.5 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> dp(n, 1);\n        \n        for (int i=0; i<n; i++) {\n            for (int j=0; j<i; j++)\n                if (nums[i] > nums[j])\n                    dp[i] = max(dp[i], dp[j] + 1);\n        }\n        \n        return *max_element(dp.begin(), dp.end());\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}