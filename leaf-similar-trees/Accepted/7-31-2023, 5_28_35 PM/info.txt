{"id":1008364771,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1690795715,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1008364771/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"12.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    vector<int> r1, r2;\npublic:\n    bool leafSimilar(TreeNode* root1, TreeNode* root2) {\n        helper(r1, root1);\n        helper(r2, root2);\n\n        if (r1.size() != r2.size())\n            return false;\n        for (auto i = 0; i < r1.size(); i++) {\n            if (r1[i] != r2[i])\n                return false;\n        }\n\n        return true;\n    }\n\n    void helper(vector<int> &l, TreeNode *root) {\n        if (!root)\n            return;\n        \n        if (!root->left && !root->right)\n            l.push_back(root->val);\n        \n        helper(l, root->left);\n        helper(l, root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}