{"id":1058496426,"lang":"cpp","lang_name":"C++","time":"3 days, 6 hours","timestamp":1695622867,"status":10,"status_display":"Accepted","runtime":"496 ms","url":"/submissions/detail/1058496426/","is_pending":"Not Pending","title":"Merge Nodes in Between Zeros","memory":"274.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeNodes(ListNode* head) {\n        if (!head)\n            return NULL;\n        if (!head->next)\n            return NULL;\n        ListNode *itr = head->next;\n        ListNode *pre = itr;\n        ListNode *new_head = NULL;\n        int t = 0;\n        while (itr) {\n            if (itr->val == 0) {\n                ListNode *node = new ListNode(t);\n                pre->next = node;\n                if (new_head == NULL)\n                    new_head = node;\n                pre = pre->next;\n                t = 0;\n            }\n            else {\n                t += itr->val;\n            }\n            itr = itr->next;\n        }\n\n\n        return new_head;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"merge-nodes-in-between-zeros","has_notes":false,"flag_type":1}