{"id":1059544992,"lang":"cpp","lang_name":"C++","time":"2 days, 2 hours","timestamp":1695722290,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1059544992/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"12.1 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\n    unordered_map<Node*, Node*> m;\npublic:\n    Node* copyRandomList(Node* head) {\n        if (!head)\n            return head;\n        Node *node = new Node(head->val);\n        m.insert(make_pair(head, node));\n        node->next = copyRandomList(head->next);\n         \n        if (head->random) {\n            if (m.find(head->random) != m.end()) {\n                node->random = m[head->random];\n            }\n        }\n        return node;\n    }\n\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}