{"id":1058572062,"lang":"cpp","lang_name":"C++","time":"3 days, 4 hours","timestamp":1695629733,"status":10,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/1058572062/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"9.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* insertionSortList(ListNode* head) {\n        if (!head || !head->next)\n            return head;\n        \n        int tmp = 0;\n        for (ListNode* curr = head; curr != nullptr; curr = curr->next) {\n            for (ListNode* prev = head; prev != curr; prev = prev->next) {\n                if (curr->val < prev->val) {\n                    tmp = curr->val;\n                    curr->val = prev->val;\n                    prev->val = tmp;\n                }\n            }\n        }\n        return head;\n    }\n};","compare_result":"1111111111111111111","title_slug":"insertion-sort-list","has_notes":false,"flag_type":1}