{"id":1059520630,"lang":"cpp","lang_name":"C++","time":"2 days, 3 hours","timestamp":1695719690,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1059520630/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"13.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        if (!root)\n            return;\n        \n        TreeNode *r = root->right;\n        flatten(root->left);\n        flatten(root->right);\n        root->right = root->left;\n        root->left = NULL;\n\n        while (root->right) {\n            root = root->right;\n        }\n        root->right = r;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"flag_type":1}