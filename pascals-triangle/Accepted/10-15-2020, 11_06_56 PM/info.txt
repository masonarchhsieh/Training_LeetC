{"id":409080128,"lang":"cpp","lang_name":"C++","time":"2 years, 11 months","timestamp":1602774416,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/409080128/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"7.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> generate(int numRows) {\n        vector<vector<int>>res;\n        if (numRows > 0)\n            helper(res, 0, numRows);\n        \n        return res;\n    }\n    \n    void helper(vector<vector<int>>& tri, int itr, int rows) {\n        if (rows <= 0)\n            return;\n        \n        vector<int> temp;\n        if (itr <= 1) {\n            temp.push_back(1);\n            if (itr == 1)\n                temp.push_back(1);\n            tri.push_back(temp);\n            helper(tri, ++itr, --rows);\n        } else  {\n            temp.push_back(1);\n            for (int i=1; i<tri[itr-1].size(); i++) {\n                temp.push_back(tri[itr-1][i-1] + tri[itr-1][i]);               \n            }\n            temp.push_back(1);\n            tri.push_back(temp);\n            helper(tri, ++itr, --rows);\n        }\n        \n    }\n};","compare_result":"111111111111111","title_slug":"pascals-triangle","has_notes":false,"flag_type":1}