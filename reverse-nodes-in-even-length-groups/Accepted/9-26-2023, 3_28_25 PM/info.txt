{"id":1059462902,"lang":"cpp","lang_name":"C++","time":"2 days, 5 hours","timestamp":1695713305,"status":10,"status_display":"Accepted","runtime":"691 ms","url":"/submissions/detail/1059462902/","is_pending":"Not Pending","title":"Reverse Nodes in Even Length Groups","memory":"364.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void reverseList(vector<ListNode*>& v, int start, int end) {\n        if (start >= end || end >= v.size())\n            return;\n        \n        int range = (end - start + 1) / 2;\n        for (auto i = 0; i < range; i++)\n            swap(v[start + i], v[end - i]);\n    }\n    ListNode* reverseEvenLengthGroups(ListNode* head) {\n        ListNode *itr = head;\n        vector<ListNode*> v;\n        while (itr) {\n            v.push_back(itr);\n            itr = itr->next;\n        }\n\n        int c = 0;\n        for (auto i = 0; i < v.size(); i+=c) {\n            c++;\n            if (c % 2 == 0) {\n                if (i + c >= v.size() && (v.size() - i) % 2 == 0) {\n                    reverseList(v, i, v.size() - 1);\n                } else if (i + c < v.size()) {\n                    reverseList(v, i, i + c - 1);\n                }\n            }\n            else if (v.size() - i  < c && (v.size() - i) % 2 == 0) {\n                reverseList(v, i, v.size() - 1);\n            }\n        }\n\n        for (auto i = 1; i < v.size(); i++)\n            v[i-1]->next = v[i];\n        v[v.size() - 1]->next = NULL;\n\n        return v[0];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-even-length-groups","has_notes":false,"flag_type":1}