{"id":1054377403,"lang":"cpp","lang_name":"C++","time":"1 week, 1 day","timestamp":1695203058,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1054377403/","is_pending":"Not Pending","title":"Path Sum II","memory":"20.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    vector<vector<int>> res;\npublic:\n    void traverse(TreeNode* root, vector<int> &path, int targetSum) {\n        if (!root)\n            return;\n        if (!root->left && !root->right) {\n            path.push_back(root->val);\n            if (targetSum == root->val)\n                res.push_back(path);\n            path.pop_back();    //undo\n            return;\n        }\n        path.push_back(root->val);\n        traverse(root->left, path, targetSum - root->val);\n        traverse(root->right, path, targetSum - root->val);\n        path.pop_back();\n    }\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        res.clear();\n        if (!root)\n            return res;\n        vector<int> path;\n        traverse(root, path, targetSum);\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}