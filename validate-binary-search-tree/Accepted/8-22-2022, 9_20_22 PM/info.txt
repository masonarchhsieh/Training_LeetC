{"id":780304349,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1661174422,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/780304349/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        return helper(root, LONG_MIN, LONG_MAX);\n    }\n    \n    bool helper(TreeNode* root, long from, long to) {\n        if (!root)\n            return true;\n        if (root->val > from && root->val < to)\n            return helper(root->left, from, root->val) && helper(root->right, root->val, to);\n        return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}