{"id":617695482,"lang":"cpp","lang_name":"C++","time":"1 year, 8 months","timestamp":1641915174,"status":10,"status_display":"Accepted","runtime":"1799 ms","url":"/submissions/detail/617695482/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"294.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        ListNode *slow = head;\n        ListNode *fast = head;\n        if (fast->next == NULL)\n            return NULL;\n        fast = fast->next;\n        if (fast->next == NULL)\n        {\n            head->next = NULL;\n            return head;\n        }\n        fast = fast->next;\n        bool flip = false;\n        while (fast != NULL) {\n            if (fast->next == NULL)\n            {\n                slow->next = slow->next->next; \n                flip = true;\n                break;\n            }\n            slow = slow->next;\n            fast = fast->next;\n            if (fast != NULL)\n                fast = fast->next;\n        }\n        \n        if (!flip) {\n            slow->next = slow->next->next; \n        }\n            \n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}